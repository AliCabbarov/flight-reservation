name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  Detect-Changes:
    runs-on: ubuntu-latest
    outputs:
      changed_services: ${{ steps.detect.outputs.services }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Detect Changed Microservices
        id: detect
        run: |
          # Git diff ile değişiklikleri kontrol et
          echo "Checking for changes in the microservices..."
          
          # Eğer commit geçmişinde bir değişiklik varsa, git diff kullan
          if [ $(git rev-list --count HEAD) -gt 1 ]; then
            git diff --name-only HEAD~1 HEAD
            CHANGED_SERVICES=$(git diff --name-only HEAD~1 HEAD | grep -E '^(flight-ms|user-ms|notification-ms)/' | cut -d'/' -f1 | sort -u | tr '\n' ',')
            echo "Detected changes in the following services: $CHANGED_SERVICES"
          else
            echo "No previous commit to compare. Skipping diff check."
            CHANGED_SERVICES=""
          fi
          
          # Eğer değişiklik varsa, değişen servisleri GitHub environment'a yaz
          if [ -z "$CHANGED_SERVICES" ]; then
            echo "No changes detected in the specified microservices."
          else
            echo "services=${CHANGED_SERVICES}" >> $GITHUB_ENV
          fi
        env:
          services: ${{ env.services }}

  Build-and-Deploy:
    needs: Detect-Changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images for Changed Microservices
        run: |
          # Eğer değişen servisler varsa, Docker image'ları oluştur ve push et
          if [ -z "${{ needs.Detect-Changes.outputs.changed_services }}" ]; then
            echo "No services detected for build and deploy."
          else
            for service in $(echo ${{ needs.Detect-Changes.outputs.changed_services }} | tr ',' ' '); do
              echo "Building and pushing Docker image for $service..."
              docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:latest $service
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
            done
          fi

      - name: Deploy to Kubernetes
        run: |
          # Eğer değişen servisler varsa, Kubernetes üzerine deploy et
          if [ -z "${{ needs.Detect-Changes.outputs.changed_services }}" ]; then
            echo "No services detected for Kubernetes deployment."
          else
            for service in $(echo ${{ needs.Detect-Changes.outputs.changed_services }} | tr "," " "); do
              echo "Deploying $service to Kubernetes..."
              kubectl apply -f k8s/$service-deploy.yaml
            done
          fi
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          ZONE_NAME: ${{ secrets.GKE_ZONE_NAME }}
